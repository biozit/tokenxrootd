#!/usr/bin/python3

import scitokens
import subprocess
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.backends import default_backend

def executeCommandBD(com):

        with open('out1.txt','w+') as fout:
                with open('err1.txt','w+') as ferr:
                        out=subprocess.call([com],stdout=fout,stderr=ferr,timeout=500,shell=True)
                        fout.seek(0)
                        output=fout.read()

                        ferr.seek(0)
                        errors = ferr.read()
                        return errors

with open("/root/scitoken/jwtRS256.key", "r") as file_pointer:
        private_key_contents = file_pointer.read()

loaded_private_key = serialization.load_pem_private_key(
        private_key_contents.encode(),
        password=None, 
        backend=default_backend()
    )

token = scitokens.SciToken(loaded_private_key)

#token.update_claims({"subject":"xrootd"});
token.update_claims({"scope":"write:/ospool/monitoring/"});
token.update_claims({"ver":"scitoken:2.0"});

serialized_token = token.serialize(issuer="https://osg-htc.org/monitoring")

print(serialized_token.decode())

e = executeCommandBD("curl -v -X PUT --upload-file /root/scitoken/data.img -H 'Authorization: Bearer " +serialized_token.decode()+"' -k https://sc-origin.chtc.wisc.edu:8443/ospool/monitoring/")
print(e)
