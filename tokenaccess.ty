#!/usr/bin/python3

import scitokens
import subprocess
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.backends import default_backend

def executeCommandBD(com):

        with open('out1.txt','w+') as fout:
                with open('err1.txt','w+') as ferr:
                        out=subprocess.call([com],stdout=fout,stderr=ferr,timeout=500,shell=True)
                        # reset file to read from it
                        fout.seek(0)
                        # save output (if any) in variable
                        output=fout.read()

                        # reset file to read from it
                        ferr.seek(0)
                        #save errors (if any) in variable
                        errors = ferr.read()
                        return errors

with open("/root/scitoken/jwtRS256.key", "r") as file_pointer:
        private_key_contents = file_pointer.read()

loaded_private_key = serialization.load_pem_private_key(
        private_key_contents.encode(),
        password=None, # Hey, it's a sample file committed to disk...
        backend=default_backend()
    )
token = scitokens.SciToken(loaded_private_key)
token.update_claims({"subject":"xrootd"});
token.update_claims({"scope":"read:/osgconnect/"});
token.update_claims({"ver":"scitoken:2.0"});

serialized_token = token.serialize(issuer="https://osg-htc.org/monitoring")
print(serialized_token.decode())

executeCommandBD("curl -v -X PUT --upload-file /root/scitoken/data.img -H 'Authorization:" serialized_token.decode()"' https://host.example.com//path/to/directory/hello_world")